/*
 * Filename      : NE_Chassis-View_Status-local.slax
 * Author        : Andrew Sharp asharp@juniper.net
 * Platform      : Junos Space
 * Release       : 13.1P2
 * Version       : 1.35
 * SVN INFO      :
 *
 * $Rev: 36133 $
 * $Date: 2014-04-24 14:14:09 +0100 (Thu, 24 Apr 2014) $
 * $Author: asharp $
 * 
 * Description   : Show component status and temperature, cooling system speeds.
 *
 */

version 1.0;

/* Namespace declarations */
ns junos = "http://xml.juniper.net/junos/*/junos";
ns xnm = "http://xml.juniper.net/xnm/1.1/xnm";
ns jcs = "http://xml.juniper.net/junos/commit-scripts/1.0";
ns jspace = "http://jspace-utils/asharp@juniper.net";
ns exsl extension = "http://exslt.org/common";

/* Imports */
import "../import/junos.xsl";
import "lc-jspace-lib.slax";

/* Junos Space specific context, name and description */
/* @CONTEXT = "/device/chassis-inventory/chassis[starts-with(name,"Chassis")]" */
/* @NAME = "View Chassis Status" */
/* @DESCRIPTION = "Show component status and temperature, cooling system speeds." */
/* @ISLOCAL = "true" */

/* Global variables */
var $scriptname = "NE_Chassis-View_Status-local.slax";
var $get-environment-information-rpc;
var $results;
var $local = jcs:open();

match / {
	<op-script-results> {
	/* abort if no connection to local mgd */
		if ($local/..//xnm:error) {
			call rpc_failure($rpc = $local/.., $message = "Error connecting on mgd on this RE");
			<xsl:message terminate="yes"> ;
		}
		/* Request environment status */
		var  $get-environment-information-rpc = <get-environment-information> {
		}

		var $results = jcs:execute( $local , $get-environment-information-rpc );
		if ($results/..//xnm:error) {
			call rpc_failure($rpc = $results/.., $message = "Error obtaining environment information.");
			<xsl:message terminate="yes"> ;
		}

		<output> { 
			<HTML> {
				<HEAD> {
					<title> "Chassis Environment";
					copy-of jspace:html-style("4");
				}
				<BODY> {
					<table border="1"> {
						<td id="tableheader"> {
							expr "Class";
						}
						<td id="tableheader"> {
							expr "Item";
						}
						<td id="tableheader"> {
							expr "Status";
						}
						<td id="tableheader"> {
							expr "Measurement";
						}
						for-each ( $results/environment-item ) {
							<tr> {
								<td id="cellcentered"> {
									expr (class);
								}
								<td> {
									expr (name);
								}
								if (status == "OK" ) {
									<td id="cellcentered"> {
										expr (status);
									}
								}
								else {
									<td id="cellwarning"> {
										expr (status);
									}
								}
								if ( class == "Temp" ) {
									<td> {
										expr (temperature);
									}
								}
								else if ( class == "Fans" ) {
									if ( temperature ) {
										<td> {
											expr (temperature);
										}
									}
									else {
										<td> {
											expr (comment);
										}
									}
								}
								else {
									<td> {
										expr (temperature);
									}
								}
							}
						}
					}
				}
			}
		}
		expr jcs:syslog("daemon.info", "SCRIPT_ACTION_CHASSIS_ENV_STATUS: Script action taken to show environment status of the Chassis.");
		var $close-results = jcs:close( $local );
		if ($close-results/..//xnm:error) {
			call rpc_failure($rpc = $close-results/.., $message = "Error closing connection.");
			<xsl:message terminate="yes"> ;
		}
	}
}

template rpc_failure($rpc, $message = "Following errors occurred while trying to gather data: ") {
  expr jcs:syslog("daemon.error", $message);
  for-each ($rpc//xnm:error) {
    expr jcs:syslog("daemon.error", message);
  }
}
