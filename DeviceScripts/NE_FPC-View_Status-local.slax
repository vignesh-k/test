/*
 * Filename      : NE_FPC-View_Status-local.slax
 * Author        : Andrew Sharp asharp@juniper.net
 * Platform      : Junos Space
 * Release       : 13.1P2
 * Version       : 1.0
 * SVN INFO      :
 *
 * $Rev: 36133 $
 * $Date: 2014-04-24 14:14:09 +0100 (Thu, 24 Apr 2014) $
 * $Author: asharp $
 * 
 * Description   : Show Flexible PIC Concentrator status.
 *
 */

version 1.0;

/* Namespace declarations */
ns junos = "http://xml.juniper.net/junos/*/junos";
ns xnm = "http://xml.juniper.net/xnm/1.1/xnm";
ns jcs = "http://xml.juniper.net/junos/commit-scripts/1.0";
ns jspace = "http://jspace-utils/asharp@juniper.net";
ns exsl extension = "http://exslt.org/common";

/* Imports */
import "../import/junos.xsl";
import "lc-jspace-lib.slax";

/* Junos Space specific context, name and description */
/* @CONTEXT = "/device/chassis-inventory/chassis/chassis-module[starts-with(name,"FPC")]" */
/* @NAME = "View FPC Status" */
/* @DESCRIPTION = "Show Flexible PIC Concentrator status." */
/* @ISLOCAL = "true" */

/* Global variables */
var $scriptname = "NE_FPC-View_Status-local.slax";
var $get-fpc-information-rpc;
var $results;
var $local = jcs:open();

var $arguments = {
	<argument> {
		<name> "CONTEXT";
		<description> "The context associated with this script.";
	}
}
param $CONTEXT;

match / {
	<op-script-results> {
		/* abort if no connection to local mgd */
		if ($local/..//xnm:error) {
			call rpc_failure($rpc = $local/.., $message = "Error connecting on mgd on this RE");
			<xsl:message terminate="yes"> ;
		}
		/* Request status for a single FPC */
		var  $get-fpc-information-rpc = <get-fpc-information> {
			<fpc-slot> jspace:parse-context-chassis("/device.*/chassis-inventory/chassis.*/chassis-module\\[name=\".* ([0-9]+)\"\\]",$CONTEXT);
		}
		var $results = jcs:execute( $local , $get-fpc-information-rpc );
		if ($results/..//xnm:error) {
			call rpc_failure($rpc = $results/.., $message = "Error collecting fpc information.");
			<xsl:message terminate="yes"> ;
		}

		<output> {
			<HTML> {
				<HEAD> {
					<title> "Flexible PIC Concentrator status";
					copy-of jspace:html-style("5");
				}
				<BODY> {
					<table border="1"> {

						<td colspan="3" id="tableheader"> {
						}
						<td colspan="2" id="tableheader"> {
							expr "CPU Utilization (%)";
						}
						<td id="celltitle"> {
							expr "Memory";
						}
						<td colspan="2" id="tableheader"> {
							expr "Utilization (%)";
						}
						<tr> {
						}
						<td id="celltitle"> {
							expr "Slot";
						}
						<td id="celltitle"> {
							expr "State";
						}
						<td id="celltitle"> {
							expr "Temp (C)";
						}
						<td id="celltitle"> {
							expr "Total";
						}
						<td id="celltitle"> {
							expr "Interrupt";
						}
						<td id="celltitle"> {
							expr "DRAM (MB)";
						}
						<td id="celltitle"> {
							expr "Heap";
						}
						<td id="celltitle"> {
							expr "Buffer";
						}
						for-each ( $results/fpc ) {
							<tr> {
								<td> {
									expr (slot);
								}
								<td> {
									expr (state);
								}
								<td> {
									expr (temperature);
								}
								<td> {
									expr (cpu-total);
								}
								<td> {
									expr (cpu-interrupt);
								}
								<td> {
									expr (memory-dram-size);
								}
								<td> {
									expr (memory-heap-utilization);
								}
								<td> {
									expr (memory-buffer-utilization);
								}
							}
						}
					}
				}
			}
		}
		expr jcs:syslog("daemon.info", "SCRIPT_ACTION_FPC_STATUS: Script action taken to show status of the Flexible PIC Concentrator (FPC).");
		var $close-results = jcs:close( $local );
		if ($close-results/..//xnm:error) {
			call rpc_failure($rpc = $close-results/.., $message = "Error closing connection.");
			<xsl:message terminate="yes"> ;
		}
	}
}

template rpc_failure($rpc, $message = "Following errors occurred while trying to gather data: ") {
  expr jcs:syslog("daemon.error", $message);
  for-each ($rpc//xnm:error) {
    expr jcs:syslog("daemon.error", message);
  }
}
